/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tttgame;

import java.io.FileInputStream;
import javax.swing.JOptionPane;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;
import static tttgame.MainFrame2.mem;

/**
 *
 * @author Nisal Waduge
 */
public class MainFrame3 extends javax.swing.JFrame {

    /**
     * Creates new form MainFream3
     */
    char temp;

    /**
     *
     */
    public MainFrame3() {
        initComponents();
    }
    MainFrame2 mf2 = new MainFrame2();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn1 = new javax.swing.JButton();
        btn2 = new javax.swing.JButton();
        btn3 = new javax.swing.JButton();
        btn4 = new javax.swing.JButton();
        btn5 = new javax.swing.JButton();
        btn6 = new javax.swing.JButton();
        btn7 = new javax.swing.JButton();
        btn8 = new javax.swing.JButton();
        btn9 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Single Player");
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        btn1.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        btn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn1ActionPerformed(evt);
            }
        });

        btn2.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        btn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn2ActionPerformed(evt);
            }
        });

        btn3.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        btn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn3ActionPerformed(evt);
            }
        });

        btn4.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        btn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn4ActionPerformed(evt);
            }
        });

        btn5.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        btn5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn5ActionPerformed(evt);
            }
        });

        btn6.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        btn6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn6ActionPerformed(evt);
            }
        });

        btn7.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        btn7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn7ActionPerformed(evt);
            }
        });

        btn8.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        btn8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn8ActionPerformed(evt);
            }
        });

        btn9.setFont(new java.awt.Font("Trebuchet MS", 1, 36)); // NOI18N
        btn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(0, 10, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn4, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn5, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn7, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn8, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn9, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        jMenuItem1.setText("New Game");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Exit");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("About");

        jMenuItem3.setText("Info");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem3);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn1ActionPerformed
        // TODO add your handling code here:
        mf2.fxBtnSnd();
        mf2.x++;
        mf2.xo();
        btn1.setText(new Character(mf2.xo).toString());
        mf2.mem[0] = mf2.xo;
        ultimatePlayer();
        checker();

//        mem[0]=xo;
//        if(x>=2)
//        checker();

    }//GEN-LAST:event_btn1ActionPerformed

    private void btn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn2ActionPerformed
        // TODO add your handling code here:
        mf2.fxBtnSnd();
        mf2.x++;
        mf2.xo();
        btn2.setText(new Character(mf2.xo).toString());
        mf2.mem[1] = mf2.xo;
        ultimatePlayer();

//        if(x>=2)
        checker();

    }//GEN-LAST:event_btn2ActionPerformed

    private void btn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn3ActionPerformed
        // TODO add your handling code here:
        mf2.fxBtnSnd();
        mf2.x++;
        mf2.xo();
        btn3.setText(new Character(mf2.xo).toString());
        mf2.mem[2] = mf2.xo;
        ultimatePlayer();

//        if(x>=2)
        checker();

    }//GEN-LAST:event_btn3ActionPerformed

    private void btn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn4ActionPerformed
        // TODO add your handling code here:
        mf2.fxBtnSnd();
        mf2.x++;
        mf2.xo();
        btn4.setText(new Character(mf2.xo).toString());
        mf2.mem[3] = mf2.xo;
        ultimatePlayer();

//        if(x>=2)
        checker();

    }//GEN-LAST:event_btn4ActionPerformed

    private void btn5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn5ActionPerformed
        // TODO add your handling code here:
        mf2.fxBtnSnd();
        mf2.x++;
        mf2.xo();
        btn5.setText(new Character(mf2.xo).toString());
        mf2.mem[4] = mf2.xo;
        ultimatePlayer();

//        if(x>=2)
        checker();

    }//GEN-LAST:event_btn5ActionPerformed

    private void btn6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn6ActionPerformed
        // TODO add your handling code here:
        mf2.fxBtnSnd();
        mf2.x++;
        mf2.xo();
        btn6.setText(new Character(mf2.xo).toString());
        mf2.mem[5] = mf2.xo;
        ultimatePlayer();

//        if(x>=2)
        checker();

    }//GEN-LAST:event_btn6ActionPerformed

    private void btn7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn7ActionPerformed
        // TODO add your handling code here:
        mf2.fxBtnSnd();
        mf2.x++;
        mf2.xo();
        btn7.setText(new Character(mf2.xo).toString());
        mf2.mem[6] = mf2.xo;
        ultimatePlayer();

//        if(x>=2)
        checker();

    }//GEN-LAST:event_btn7ActionPerformed

    private void btn8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn8ActionPerformed
        // TODO add your handling code here:
        mf2.fxBtnSnd();
        mf2.x++;
        mf2.xo();
        btn8.setText(new Character(mf2.xo).toString());
        mf2.mem[7] = mf2.xo;
        ultimatePlayer();

//        if(x>=2)
        checker();

    }//GEN-LAST:event_btn8ActionPerformed

    private void btn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn9ActionPerformed
        // TODO add your handling code here:
        mf2.fxBtnSnd();
        mf2.x++;
        mf2.xo();
        btn9.setText(new Character(mf2.xo).toString());
        mf2.mem[8] = mf2.xo;
        ultimatePlayer();

//        if(x>=2)
        checker();

    }//GEN-LAST:event_btn9ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        nuller();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        int i = JOptionPane.showConfirmDialog(this, "Are you sure", "Exit", JOptionPane.YES_NO_OPTION);
        if (i == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Nisal Waduge Creations 2015\n\t\t\t              TicTacToe");
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame3().setVisible(true);
            }
        });
    }

    void virtualPlayer() {
        int n = 0;
        int z = 0;

        {
            if (mf2.mem[0] == 'X' & mf2.mem[0 + 1] == 'X') {
                btn3.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[0 + 1] == 'X' & mf2.mem[1 + 2] == 'X') {
                btn1.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[3] == 'X' & mf2.mem[4] == 'X') {
                btn6.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[4] == 'X' & mf2.mem[5] == 'X') {
                btn4.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[6] == 'X' & mf2.mem[7] == 'X') {
                btn9.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[7] == 'X' & mf2.mem[8] == 'X') {
                btn7.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[0] == 'X' & mf2.mem[3] == 'X') {
                btn7.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[3] == 'X' & mf2.mem[6] == 'X') {
                btn1.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[1] == 'X' & mf2.mem[4] == 'X') {
                btn8.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[4] == 'X' & mf2.mem[7] == 'X') {
                btn2.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[2] == 'X' & mf2.mem[5] == 'X') {
                btn9.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[5] == 'X' & mf2.mem[8] == 'X') {
                btn3.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[4] == 'X' & mf2.mem[0] == 'X') {
                btn9.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[4] == 'X' & mf2.mem[8] == 'X') {
                btn1.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[2] == 'X' & mf2.mem[4] == 'X') {
                btn7.setText(new Character('O').toString());
                n++;
            } else if (mf2.mem[4] == 'X' & mf2.mem[6] == 'X') {
                btn3.setText(new Character('O').toString());
                n++;
            }

        }
        if (n == 0) {
//          if(mf2.mem[0]!='0'&mf2.mem[0]=='X')
//          {
//             // btn4.setText(new Character('O').toString());
//              
//              int rand=(int) ((Math.random()*100)%5);
//              switch(rand)
//              {
//                  case 0:btn5.setText(new Character('O').toString());break;
//                  case 1:btn2.setText(new Character('O').toString());break;
//                  case 2:btn5.setText(new Character('O').toString());break;
//                  case 3:btn4.setText(new Character('O').toString());break;
//                  case 4:btn5.setText(new Character('O').toString());break;
//                      
//                    
//              }
//              
//          }
//          else if(mf2.mem[1]!='1'&mf2.mem[1]=='X')
//          {
//              
//          }
            int count = 0;
            for (int i = 0; i < 9; i++) {

                if (mf2.mem[i] == 'X') {
                    count++;
                    continue;
                } else {
                    if (count == 1) {
                        switch (i) {
                            case 0:
                                btn1.setText(new Character('O').toString());
                                break;
                            case 1:
                                btn2.setText(new Character('O').toString());
                                break;
                            case 2:
                                btn3.setText(new Character('O').toString());
                                break;
                            case 3:
                                btn4.setText(new Character('O').toString());
                                break;
                            case 4:
                                btn5.setText(new Character('O').toString());
                                break;
                            case 5:
                                btn6.setText(new Character('O').toString());
                                break;
                            case 6:
                                btn7.setText(new Character('O').toString());
                                break;
                            case 7:
                                btn8.setText(new Character('O').toString());
                                break;
                            case 8:
                                btn9.setText(new Character('O').toString());
                                break;

                        }
                    }
                }
            }
        }
    } //this method created for automatic player but had bugs

    void virtualPlayerTrue() {
        int i, j = 0;
        int[] array = new int[9];
        for (i = 0; i < 9; i++) {
            if (mf2.mem[i] != 'X' | mf2.mem[i] != 'O') {

                array[i] = i;
            }
        }
        while (array[j] == ' ') {
            switch (j) {
                case 0:
                    btn1.setText(new Character('O').toString());
                    break;
                case 1:
                    btn2.setText(new Character('O').toString());
                    break;
                case 2:
                    btn3.setText(new Character('O').toString());
                    break;
                case 3:
                    btn4.setText(new Character('O').toString());
                    break;
                case 4:
                    btn5.setText(new Character('O').toString());
                    break;
                case 5:
                    btn6.setText(new Character('O').toString());
                    break;
                case 6:
                    btn7.setText(new Character('O').toString());
                    break;
                case 7:
                    btn8.setText(new Character('O').toString());
                    break;
                case 8:
                    btn9.setText(new Character('O').toString());
                    break;
            }
            j++;
        }

    } //this method created for automatic player but had bugs

    void ultimatePlayer() {
        int j = 0, l = 0;
        mf2.x++;
        int k = 0;

        int n = 0;
        int z = 0;

        if (mf2.x == 2 & mf2.mem[4] != 'X' & mf2.mem[4] != 'O') {
            btn5.setText(new Character('O').toString());
            mf2.mem[4] = 'O';
            z++;
        }
        if (z == 0) {

            if (mf2.mem[0] == 'O' & mf2.mem[1] == 'O' & mf2.mem[2] != 'X') {
                btn3.setText(new Character('O').toString());
                mf2.mem[2] = 'O';
                l++;
            } else if (mf2.mem[1] == 'O' & mf2.mem[2] == 'O' & mf2.mem[0] != 'X') {
                btn1.setText(new Character('O').toString());
                mf2.mem[0] = 'O';
                l++;
            } else if (mf2.mem[3] == 'O' & mf2.mem[4] == 'O' & mf2.mem[5] != 'X') {
                btn6.setText(new Character('O').toString());
                mf2.mem[5] = 'O';
                l++;
            } else if (mf2.mem[4] == 'O' & mf2.mem[5] == 'O' & mf2.mem[3] != 'X') {
                btn4.setText(new Character('O').toString());
                mf2.mem[3] = 'O';
                l++;
            } else if (mf2.mem[6] == 'O' & mf2.mem[7] == 'O' & mf2.mem[8] != 'X') {
                btn9.setText(new Character('O').toString());
                mf2.mem[8] = 'O';
                l++;
            } else if (mf2.mem[7] == 'O' & mf2.mem[8] == 'O' & mf2.mem[6] != 'X') {
                btn7.setText(new Character('O').toString());
                mf2.mem[6] = 'O';
                l++;
            } else if (mf2.mem[0] == 'O' & mf2.mem[3] == 'O' & mf2.mem[6] != 'X') {
                btn7.setText(new Character('O').toString());
                mf2.mem[6] = 'O';
                l++;
            } else if (mf2.mem[3] == 'O' & mf2.mem[6] == 'O' & mf2.mem[0] != 'X') {
                btn1.setText(new Character('O').toString());
                mf2.mem[0] = 'O';
                l++;
            } else if (mf2.mem[1] == 'O' & mf2.mem[4] == 'O' & mf2.mem[7] != 'X') {
                btn8.setText(new Character('O').toString());
                mf2.mem[7] = 'O';
                l++;
            } else if (mf2.mem[4] == 'O' & mf2.mem[7] == 'O' & mf2.mem[1] != 'X') {
                btn2.setText(new Character('O').toString());
                mf2.mem[1] = 'O';
                l++;
            } else if (mf2.mem[2] == 'O' & mf2.mem[5] == 'O' & mf2.mem[8] != 'X') {
                btn9.setText(new Character('O').toString());
                mf2.mem[8] = 'O';
                l++;
            } else if (mf2.mem[5] == 'O' & mf2.mem[8] == 'O' & mf2.mem[2] != 'X') {
                btn3.setText(new Character('O').toString());
                mf2.mem[2] = 'O';
                l++;
            } else if (mf2.mem[4] == 'O' & mf2.mem[0] == 'O' & mf2.mem[8] != 'X') {
                btn9.setText(new Character('O').toString());
                mf2.mem[8] = 'O';
                l++;
            } else if (mf2.mem[4] == 'O' & mf2.mem[8] == 'O' & mf2.mem[0] != 'X') {
                btn1.setText(new Character('O').toString());
                mf2.mem[0] = 'O';
                l++;
            } else if (mf2.mem[2] == 'O' & mf2.mem[4] == 'O' & mf2.mem[6] != 'X') {
                btn7.setText(new Character('O').toString());
                mf2.mem[6] = 'O';
                l++;
            } else if (mf2.mem[4] == 'O' & mf2.mem[6] == 'O' & mf2.mem[2] != 'X') {
                btn3.setText(new Character('O').toString());
                mf2.mem[2] = 'O';
                l++;
            } else if (mf2.mem[0] == 'O' & mf2.mem[2] == 'O' & mf2.mem[1] != 'X') {
                btn2.setText(new Character('O').toString());
                mf2.mem[1] = 'O';
                l++;
            } else if (mf2.mem[3] == 'O' & mf2.mem[5] == 'O' & mf2.mem[4] != 'X') {
                btn5.setText(new Character('O').toString());
                mf2.mem[4] = 'O';
                l++;
            } else if (mf2.mem[6] == 'O' & mf2.mem[8] == 'O' & mf2.mem[7] != 'X') {
                btn8.setText(new Character('O').toString());
                mf2.mem[7] = 'O';
                l++;
            } else if (mf2.mem[0] == 'O' & mf2.mem[6] == 'O' & mf2.mem[3] != 'X') {
                btn4.setText(new Character('O').toString());
                mf2.mem[3] = 'O';
                l++;
            } else if (mf2.mem[7] == 'O' & mf2.mem[1] == 'O' & mf2.mem[4] != 'X') {
                btn5.setText(new Character('O').toString());
                mf2.mem[4] = 'O';
                l++;
            } else if (mf2.mem[2] == 'O' & mf2.mem[8] == 'O' & mf2.mem[5] != 'X') {
                btn6.setText(new Character('O').toString());
                mf2.mem[5] = 'O';
                l++;
            } else if (mf2.mem[0] == 'O' & mf2.mem[8] == 'O' & mf2.mem[4] != 'X') {
                btn5.setText(new Character('O').toString());
                mf2.mem[4] = 'O';
                l++;
            } else if (mf2.mem[2] == 'O' & mf2.mem[6] == 'O' & mf2.mem[4] != 'X') {
                btn5.setText(new Character('O').toString());
                mf2.mem[4] = 'O';
                l++;
            }
        }

        if (l == 0) {

            if (mf2.mem[0] == 'X' & mf2.mem[1] == 'X' & mf2.mem[2] != 'O') {
                btn3.setText(new Character('O').toString());
                mf2.mem[2] = 'O';
                n++;
            } else if (mf2.mem[1] == 'X' & mf2.mem[2] == 'X' & mf2.mem[0] != 'O') {
                btn1.setText(new Character('O').toString());
                mf2.mem[0] = 'O';
                n++;
            } else if (mf2.mem[3] == 'X' & mf2.mem[4] == 'X' & mf2.mem[5] != 'O') {
                btn6.setText(new Character('O').toString());
                mf2.mem[5] = 'O';
                n++;
            } else if (mf2.mem[4] == 'X' & mf2.mem[5] == 'X' & mf2.mem[3] != 'O') {
                btn4.setText(new Character('O').toString());
                mf2.mem[3] = 'O';
                n++;
            } else if (mf2.mem[6] == 'X' & mf2.mem[7] == 'X' & mf2.mem[8] != 'O') {
                btn9.setText(new Character('O').toString());
                mf2.mem[8] = 'O';
                n++;
            } else if (mf2.mem[7] == 'X' & mf2.mem[8] == 'X' & mf2.mem[6] != 'O') {
                btn7.setText(new Character('O').toString());
                mf2.mem[6] = 'O';
                n++;
            } else if (mf2.mem[0] == 'X' & mf2.mem[3] == 'X' & mf2.mem[6] != 'O') {
                btn7.setText(new Character('O').toString());
                mf2.mem[6] = 'O';
                n++;
            } else if (mf2.mem[3] == 'X' & mf2.mem[6] == 'X' & mf2.mem[0] != 'O') {
                btn1.setText(new Character('O').toString());
                mf2.mem[0] = 'O';
                n++;
            } else if (mf2.mem[1] == 'X' & mf2.mem[4] == 'X' & mf2.mem[7] != 'O') {
                btn8.setText(new Character('O').toString());
                mf2.mem[7] = 'O';
                n++;
            } else if (mf2.mem[4] == 'X' & mf2.mem[7] == 'X' & mf2.mem[1] != 'O') {
                btn2.setText(new Character('O').toString());
                mf2.mem[1] = 'O';
                n++;
            } else if (mf2.mem[2] == 'X' & mf2.mem[5] == 'X' & mf2.mem[8] != 'O') {
                btn9.setText(new Character('O').toString());
                mf2.mem[8] = 'O';
                n++;
            } else if (mf2.mem[5] == 'X' & mf2.mem[8] == 'X' & mf2.mem[2] != 'O') {
                btn3.setText(new Character('O').toString());
                mf2.mem[2] = 'O';
                n++;
            } else if (mf2.mem[4] == 'X' & mf2.mem[0] == 'X' & mf2.mem[8] != 'O') {
                btn9.setText(new Character('O').toString());
                mf2.mem[8] = 'O';
                n++;
            } else if (mf2.mem[4] == 'X' & mf2.mem[8] == 'X' & mf2.mem[0] != 'O') {
                btn1.setText(new Character('O').toString());
                mf2.mem[0] = 'O';
                n++;
            } else if (mf2.mem[2] == 'X' & mf2.mem[4] == 'X' & mf2.mem[6] != 'O') {
                btn7.setText(new Character('O').toString());
                mf2.mem[6] = 'O';
                n++;
            } else if (mf2.mem[4] == 'X' & mf2.mem[6] == 'X' & mf2.mem[2] != 'O') {
                btn3.setText(new Character('O').toString());
                mf2.mem[2] = 'O';
                n++;
            } else if (mf2.mem[0] == 'X' & mf2.mem[2] == 'X' & mf2.mem[1] != 'O') {
                btn2.setText(new Character('O').toString());
                mf2.mem[1] = 'O';
                n++;
            } else if (mf2.mem[3] == 'X' & mf2.mem[5] == 'X' & mf2.mem[4] != 'O') {
                btn5.setText(new Character('O').toString());
                mf2.mem[4] = 'O';
                n++;
            } else if (mf2.mem[6] == 'X' & mf2.mem[8] == 'X' & mf2.mem[7] != 'O') {
                btn8.setText(new Character('O').toString());
                mf2.mem[7] = 'O';
                n++;
            } else if (mf2.mem[0] == 'X' & mf2.mem[6] == 'X' & mf2.mem[3] != 'O') {
                btn4.setText(new Character('O').toString());
                mf2.mem[3] = 'O';
                n++;
            } else if (mf2.mem[7] == 'X' & mf2.mem[1] == 'X' & mf2.mem[4] != 'O') {
                btn5.setText(new Character('O').toString());
                mf2.mem[4] = 'O';
                n++;
            } else if (mf2.mem[2] == 'X' & mf2.mem[8] == 'X' & mf2.mem[5] != 'O') {
                btn6.setText(new Character('O').toString());
                mf2.mem[5] = 'O';
                n++;
            } else if (mf2.mem[0] == 'X' & mf2.mem[8] == 'X' & mf2.mem[4] != 'O') {
                btn5.setText(new Character('O').toString());
                mf2.mem[4] = 'O';
                n++;
            } else if (mf2.mem[2] == 'X' & mf2.mem[6] == 'X' & mf2.mem[4] != 'O') {
                btn5.setText(new Character('O').toString());
                mf2.mem[4] = 'O';
                n++;
            }
        }

        if (n == 0 & l == 0 & z == 0) {

            for (int i = 0; i < 9; i++) {
                if (mf2.mem[i] != 'X' & mf2.mem[i] != 'O') {

                    j++;
                }
            }
            int[] arry = new int[j];
            for (int i = 0; i < 9; i++) {
                if (mf2.mem[i] == 'X' | mf2.mem[i] == 'O') {
                    continue;
                } else {
                    arry[k] = i;
                    k++;
                }
            }

            for (int i = 0; i < j; i++) {
                switch (arry[i]) {
                    case 0: {
                        btn1.setText(new Character('O').toString());
                        mf2.mem[0] = 'O';
                    }
                    break;
                    case 1: {
                        btn2.setText(new Character('O').toString());
                        mf2.mem[1] = 'O';
                    }
                    break;
                    case 2: {
                        btn3.setText(new Character('O').toString());
                        mf2.mem[2] = 'O';
                    }
                    break;
                    case 3: {
                        btn4.setText(new Character('O').toString());
                        mf2.mem[3] = 'O';
                    }
                    break;
                    case 4: {
                        btn5.setText(new Character('O').toString());
                        mf2.mem[4] = 'O';
                    }
                    break;
                    case 5: {
                        btn6.setText(new Character('O').toString());
                        mf2.mem[5] = 'O';
                    }
                    break;
                    case 6: {
                        btn7.setText(new Character('O').toString());
                        mf2.mem[6] = 'O';
                    }
                    break;
                    case 7: {
                        btn8.setText(new Character('O').toString());
                        mf2.mem[7] = 'O';
                    }
                    break;
                    case 8: {
                        btn9.setText(new Character('O').toString());
                        mf2.mem[8] = 'O';
                    }
                    break;
                }
                break;

            }
//            System.out.println(j);
//            for (int b : arry) {
//                System.out.print(b);
//
//            }
//            System.out.println();
        }
        checker();
    } //this method understands and reacts to the human player

    /**
     *
     */
    public void checker() {
        if (mem[0] == mem[1] && mem[1] == mem[2]) {
            temp = mem[0];
            win();
        } else if (mem[3] == mem[4] && mem[4] == mem[5]) {
            temp = mem[3];
            win();

        } else if (mem[6] == mem[7] && mem[7] == mem[8]) {
            temp = mem[6];
            win();
        } else if (mem[0] == mem[3] && mem[3] == mem[6]) {
            temp = mem[0];
            win();
        } else if (mem[1] == mem[4] && mem[4] == mem[7]) {
            temp = mem[1];
            win();
        } else if (mem[2] == mem[5] && mem[5] == mem[8]) {
            temp = mem[2];
            win();
        } else if (mem[0] == mem[4] && mem[4] == mem[8]) {
            temp = mem[0];
            win();
        } else if (mem[2] == mem[4] && mem[4] == mem[6]) {
            temp = mem[2];
            win();
        } else if (mf2.x == 10) {
            try {
                FileInputStream fi = new FileInputStream("C:\\Users\\Nisal Waduge\\Desktop\\TTTGame\\smb_mariodie.wav");
                AudioStream as = new AudioStream(fi);
                AudioPlayer.player.start(as);

            } catch (Exception e) {

            }
            JOptionPane.showMessageDialog(rootPane, "Tied");
            nuller();
            mf2.x = 0;

        }
        //   System.err.println(mf2.x);
    } //this method check either PC or human player makes a win

    /**
     *
     */
    public void win() {
        try {
            FileInputStream fi = new FileInputStream("C:\\Users\\Nisal Waduge\\Desktop\\TTTGame\\smb_vine.wav");
            AudioStream as = new AudioStream(fi);
            AudioPlayer.player.start(as);

        } catch (Exception e) {

        }
        if (temp == 'O') {
            JOptionPane.showMessageDialog(rootPane, "PC Wins!");
        } else if (temp == 'X') {
            JOptionPane.showMessageDialog(rootPane, "Player Wins!");
        }
        nuller();

    } //winning or tied fx sounds and messages

    /**
     *
     */
    public void nuller() {
        mf2.x = 0;

        btn1.setText(null);
        btn2.setText(null);
        btn3.setText(null);
        btn4.setText(null);
        btn5.setText(null);
        btn6.setText(null);
        btn7.setText(null);
        btn8.setText(null);
        btn9.setText(null);
        for (int i = 0; i < 9; i++) {
            mem[i] = Character.lowSurrogate(i);
        }
    } //clearing the game board for another game

    /**
     *
     */
    public void fxBtnSnd() {
        try {
            FileInputStream fi = new FileInputStream("C:\\Users\\Nisal Waduge\\Desktop\\TTTGame\\smb_coin.wav");
            AudioStream as = new AudioStream(fi);
            AudioPlayer.player.start(as);
        } catch (Exception e) {

        }

    } //includes the fx sounds which plays in win()


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn1;
    private javax.swing.JButton btn2;
    private javax.swing.JButton btn3;
    private javax.swing.JButton btn4;
    private javax.swing.JButton btn5;
    private javax.swing.JButton btn6;
    private javax.swing.JButton btn7;
    private javax.swing.JButton btn8;
    private javax.swing.JButton btn9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
